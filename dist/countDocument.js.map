{"version":3,"file":"countDocument.js","mappings":"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","sources":["webpack://typescript/webpack/bootstrap","webpack://typescript/webpack/runtime/compat get default export","webpack://typescript/webpack/runtime/define property getters","webpack://typescript/webpack/runtime/hasOwnProperty shorthand","webpack://typescript/webpack/runtime/make namespace object","webpack://typescript/external commonjs \"k6/x/mongo\"","webpack://typescript/./src/libs/mongoDBClient.ts","webpack://typescript/./src/scenarios/mongoDBScenarios.ts","webpack://typescript/./src/libs/executor.ts","webpack://typescript/./src/tests/mongoDB/countDocument.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"k6/x/mongo\");","//@ts-ignore\nimport xk6_mongo from 'k6/x/mongo';\n\n// MongoDB client class\nexport class MongoClient {\n  private mongoDBHost: string;\n  private mongoDBPort: number;\n  private mongoDBName: string;\n  private client: xk6_mongo.Client | null;\n\n  // Constructor to initialize MongoDB connection settings\n  constructor(mongoDBHost: string, mongoDBPort: number = 27017, mongoDBName: string = 'leapXpert') {\n    this.mongoDBHost = mongoDBHost;\n    this.mongoDBPort = mongoDBPort;\n    this.mongoDBName = mongoDBName;\n    this.client = null; // MongoDB client instance\n  }\n\n  // Private method to establish MongoDB connection\n  private connect() {\n    if (!this.client) {\n      // Construct MongoDB connection string\n      const connectionString = `mongodb://${this.mongoDBHost}:${this.mongoDBPort}/${this.mongoDBName}`;\n      // Create a new MongoDB client instance\n      this.client = xk6_mongo.newClient(connectionString);\n    }\n    // Return MongoDB client instance\n    return this.client;\n  }\n\n\n  // Private method to disconnect from MongoDB\n  private disconnect() {\n    if (this.client) {\n      this.client.close(); // Close MongoDB client connection\n      // this.client = null;\n    }\n  }\n\n  // Find all documents in a collection\n  findAll(dbName: string, collectionName: string) {\n    try {\n      const client = this.connect();\n      const results = client.findAll(dbName, collectionName); // Fetch all documents\n      return results; // Return query results\n    } catch (error) {\n      console.error(\"Error finding documents:\", error); // Log error if query fails\n      throw error; // Propagate error\n    }\n    // finally {\n    //   this.disconnect();\n    // }\n  }\n\n  // Find a single document in a collection\n  findOne(dbName: string, collectionName: string, filter: object) {\n    try {\n      const client = this.connect();\n      const result = client.findOne(dbName, collectionName, filter); // Find one document\n      return result; // Return query result\n    } catch (error) {\n      console.error(\"Error finding document:\", error); // Log error if query fails\n      throw error; // Propagate error\n    }\n  }\n\n  // Delete a single document from a collection\n  deleteOne(dbName: string, collectionName: string, filter: object) {\n    try {\n      const client = this.connect();\n      const result = client.deleteOne(dbName, collectionName, filter); // Delete one document\n      return result; // Return deletion result\n    } catch (error) {\n      console.error(\"Error deleting document:\", error); // Log error if deletion fails\n      throw error; // Propagate error\n    }\n  }\n\n  // Delete multiple documents from a collection\n  deleteMany(dbName: string, collectionName: string, filter: object) {\n    try {\n      const client = this.connect();\n      const result = client.deleteMany(dbName, collectionName, filter); // Delete multiple documents\n      return result; // Return deletion result\n    } catch (error) {\n      console.error(\"Error deleting documents:\", error); // Log error if deletion fails\n      throw error; // Propagate error\n    }\n  }\n\n  // Count documents in a collection\n  countDocuments(dbName: string, collectionName: string, filter: object) {\n    try {\n      const client = this.connect();\n      const count = client.countDocuments(dbName, collectionName, filter); // Count documents\n      return count; // Return count result\n    } catch (error) {\n      console.error(\"Error counting documents:\", error); // Log error if counting fails\n      throw error; // Propagate error\n    }\n  }\n\n  // Find distinct values in a collection\n  distinct(dbName: string, collectionName: string, key: string, filter: object) {\n    try {\n      const client = this.connect();\n      const results = client.distinct(dbName, collectionName, key, filter); // Find distinct values\n      return results; // Return distinct values\n    } catch (error) {\n      console.error(\"Error distincting documents:\", error); // Log error if distinct operation fails\n      throw error; // Propagate error\n    }  \n  }\n\n  // Drop a collection from the database\n  dropCollection(dbName: string, collectionName: string) {\n    try {\n      const client = this.connect();\n      const error = client.dropCollection(dbName, collectionName); // Drop collection\n      return error; // Return error (if any)\n    } catch (error) {\n      console.error(\"Error dropping collection:\", error); // Log error if dropping collection fails\n      throw error; // Propagate error\n    }\n  }\n\n  // Find a document and update it in a collection\n  findOneAndUpdate(dbName: string, collectionName: string, filter: object, update: object) {\n    try {\n      const client = this.connect();\n      const result = client.findOneAndUpdate(dbName, collectionName, filter, update); // Find and update document\n      return result; // Return update result\n    } catch (error) {\n      console.error(\"Error updating document:\", error); // Log error if update fails\n      throw error; // Propagate error\n    }\n  }\n\n  // Insert a single document into a collection\n  insertOne(dbName: string, collectionName: string, doc: object) {\n    try {\n      const client = this.connect();\n      const error = client.insertOne(dbName, collectionName, doc); // Insert one document\n      return error; // Return error (if any)\n    } catch (error) {\n      console.error(\"Error inserting document:\", error); // Log error if insertion fails\n      throw error; // Propagate error\n    }\n  }\n\n  // Insert multiple documents into a collection\n  insertMany(dbName: string, collectionName: string, docs: object[]) {\n    try {\n      const client = this.connect();\n      const error = client.insertMany(dbName, collectionName, docs); // Insert multiple documents\n      return error; // Return error (if any)\n    } catch (error) {\n      console.error(\"Error inserting documents:\", error); // Log error if insertion fails\n      throw error; // Propagate error\n    }\n  }\n\n  // Update a single document in a collection\n  updateOne(dbName: string, collectionName: string, filter: object, update: object) {\n    try {\n      const client = this.connect();\n      const error = client.updateOne(dbName, collectionName, filter, update); // Update one document\n      return error; // Return error (if any)\n    } catch (error) {\n      console.error(\"Error updating document:\", error); // Log error if update fails\n      throw error; // Propagate error\n    }\n  }\n\n  // Update multiple documents in a collection\n  updateMany(dbName: string, collectionName: string, filter: object, update: object) {\n    try {\n      const client = this.connect();\n      const error = client.updateMany(dbName, collectionName, filter, update); // Update multiple documents\n      return error; // Return error (if any)\n    } catch (error) {\n      console.error(\"Error updating documents:\", error); // Log error if update fails\n      throw error; // Propagate error\n    }\n  }\n}\n","//@ts-ignore\nimport { MongoClient } from \"../libs/mongoDBClient\";\n\n// Environment variable configuration\n// Export these variables in your environment or in a .env file before running the script\n// export MONGODB_USER=your_mongodb_username\n// export MONGODB_PASSWORD=your_mongodb_password\n// export MONDODB_HOST=your_mongodb_host\n// export VUS=1 ITERATIONS=1 MAX_DURATION=30000 EXECUTOR='per-vu-iterations' ENV=performance\n// Configuration constants\nconst mongoDBPort = parseInt(__ENV.MONGODB_PORT) || 27017;\nconst mongoDBUser = __ENV.MONGODB_USER || 'lxp';\nconst mongoDBPassword = __ENV.MONGODB_PASSWORD || 'skLmSaMzoc3H';\nconst mongoDBHost = `${mongoDBUser}:${mongoDBPassword}@localhost`;\nconst dbName = 'leapXpert';\n\n// Reusable MongoDB client\nconst client = new MongoClient(mongoDBHost, mongoDBPort);\n\n// Function to find all documents in a collection\nexport function findAllDocuments() {\n  const collectionName = 'DBCompany';\n  try {\n    const results = client.findAll(dbName, collectionName);\n    console.log('Documents found:', results);\n  } catch (error) {\n    console.error('Error finding documents:', error);\n  }\n}\n\n// Function to find a specific document in a collection\nexport function findDocument() {\n  const collectionName = 'DBUser';\n  const filter = { name: 'moana' };\n  try {\n    const result = client.findOne(dbName, collectionName, filter);\n    console.log('Document found:', result);\n  } catch (error) {\n    console.error('Error finding document:', error);\n  }\n}\n\n// Function to count documents in a collection\nexport function countDocument() {\n  const collectionName = 'DBUser';\n  const filter = {};\n  try {\n    const result = client.countDocuments(dbName, collectionName, filter);\n    console.log('Document count:', result);\n  } catch (error) {\n    console.error('Error counting document:', error);\n  }\n}\n","// const defaultEnv = { name: __ENV.ENV || 'perf' };\n// const defaultVUs = __ENV.VUS || 1;\n// const defaultIterations = __ENV.ITERATIONS || 1;\n// const defaultDuration = __ENV.DURATION || '1m';\n// const defaultMaxDuration = __ENV.MAX_DURATION || '1m';\n// const defaultRate = __ENV.RATE || 1;\n// const defaultTimeUnit = __ENV.TIME_UNIT || '1s';\n// const defaultStartTime = __ENV.START_TIME || '0s';\n\n// const generateScenarioPerVuIterations = (name, vus, iterations, maxDuration, startTime ) => ({\n//   [name]: {\n//     executor: 'per-vu-iterations',\n//     vus: vus || 1,\n//     startTime: startTime || '0s',\n//     iterations: iterations || 1,\n//     maxDuration: maxDuration || '1m',\n//     tags: { name: name },\n//     env: defaultEnv,\n//     exec: name\n//   }\n// });\n\n// const generateScenarioConstantArrivalRate = (name, duration, rate, timeUnit, preAllocatedVUs, startTime) => ({\n//   [name]: {\n//     executor: 'constant-arrival-rate',\n//     startTime: startTime || '0s',\n//     duration: duration || '1m',\n//     rate: rate || 1,\n//     timeUnit: timeUnit ,\n//     preAllocatedVUs: preAllocatedVUs ,\n//     tags: { name: name },\n//     env: defaultEnv,\n//     exec: name\n//   }\n// });\n\n// const generateScenarioConstantVUs = (name, vus, duration, startTime) => ({\n//   [name]: {\n//     executor: 'constant-vus',\n//     vus: vus,\n//     startTime: startTime,\n//     duration: duration,\n//     tags: { name: name },\n//     env: defaultEnv,\n//     exec: name\n//   }\n// });\n\n// const generateScenarios = (funcExecution, executor) => {\n//   const scenarios = {};\n//   for (let func of funcExecution) {\n//     switch (executor) {\n//       case 'per-vu-iterations':\n//         Object.assign(scenarios, generateScenarioPerVuIterations(func, defaultVUs, defaultIterations, defaultMaxDuration, defaultStartTime));\n//         break;\n//       case 'constant-arrival-rate':\n//         Object.assign(scenarios, generateScenarioConstantArrivalRate(func, defaultDuration, defaultRate, defaultTimeUnit, defaultVUs, defaultStartTime));\n//         break;\n//       case 'constant-vus':\n//         Object.assign(scenarios, generateScenarioConstantVUs(func, defaultVUs, defaultDuration, defaultStartTime));\n//         break;\n//       default:\n//         console.error('Unknown executor type:', executor);\n//     }\n//   }\n//   return scenarios;\n// };\n\n// const generateReqFailedThreshold = (metric, value) => ({\n//   [`http_req_failed{name: ${metric}}`]: [`${value}`],\n// });\n\n// const generateCustomThreshold = (metric, value) => {\n//   // Split the value string into an array of individual threshold values and trim any whitespace\n//   const values = value.split(',').map(val => val.trim());\n//   return {\n//     [metric]: values,\n//   };\n// };\n\n// /**\n//  * Generates a threshold configuration for HTTP request duration.\n//  *\n//  * @param {string} metric - The name of the metric.\n//  * @param {string} value - A comma-separated string of threshold values.\n//  * @returns {Object} - The threshold configuration object.\n//  */\n// const generateReqDurationThreshold = (metric, value) => {\n//   // Split the value string into an array of individual threshold values and trim any whitespace\n//   const values = value.split(',').map(val => val.trim());\n//   return {\n//     // Create a property with the metric name and its threshold values\n//     [`http_req_duration{name: \"${metric}\"}`]: values,\n//   };\n// };\n\n// export {\n//   generateScenarios,\n//   generateScenarioConstantVUs,\n//   generateScenarioConstantArrivalRate,\n//   generateScenarioPerVuIterations,\n//   generateReqDurationThreshold,\n//   generateCustomThreshold,\n//   generateReqFailedThreshold\n// };\n\nexport class k6Executor { \n  private VUs: number;\n  private iterations: number;\n  private duration: string;\n  private maxDuration: string;\n  private rate: number;\n  private timeUnit: string;\n  private startTime: string;\n  constructor() {\n    this.VUs = Number(__ENV.VUS) || 1;\n    this.iterations = Number(__ENV.ITERATIONS) || 1;\n    this.duration = __ENV.DURATION || '1m';\n    this.maxDuration = __ENV.MAX_DURATION || '1m';\n    this.rate = Number(__ENV.RATE) || 1;\n    this.timeUnit = __ENV.TIME_UNIT || '1s';\n    this.startTime = __ENV.START_TIME || '0s';\n  }\n  generateScenarioPerVuIterations(name: string){\n    return {\n      [name]: {\n        executor: 'per-vu-iterations',\n        vus: this.VUs,\n        startTime: this.startTime,\n        iterations: this.iterations,\n        maxDuration: this.maxDuration,\n        tags: { name: name },\n        env: { name: __ENV.ENV || 'perf' },\n        exec: name\n      }\n    }\n  }\n  generateScenarioConstantArrivalRate(name: string){\n    return {\n      [name]: {\n        executor: 'constant-arrival-rate',\n        startTime: this.startTime,\n        duration: this.duration,\n        rate: this.rate,\n        timeUnit: this.timeUnit,\n        preAllocatedVUs: this.VUs,\n        tags: { name: name },\n        env: { name: __ENV.ENV || 'perf' },\n        exec: name\n      }\n    }\n  }\n  generateScenarioConstantVUs(name: string){\n    return {\n      [name]: {\n        executor: 'constant-vus',\n        vus: this.VUs,\n        startTime: this.startTime,\n        duration: this.duration,\n        tags: { name: name },\n        env: { name: __ENV.ENV || 'perf' },\n        exec: name\n      }\n    }\n  }\n  generateScenarios(funcExecution: string[], executor: string){\n    const scenarios = {};\n    for (let func of funcExecution) {\n      switch (executor) {\n        case 'per-vu-iterations':\n          Object.assign(scenarios, this.generateScenarioPerVuIterations(func));\n          break;\n        case 'constant-arrival-rate':\n          Object.assign(scenarios, this.generateScenarioConstantArrivalRate(func));\n          break;\n        case 'constant-vus':\n          Object.assign(scenarios, this.generateScenarioConstantVUs(func));\n          break;\n        default:\n          console.error('Unknown executor type:', executor);\n      }\n    }\n    return scenarios;\n  }\n  generateReqFailedThreshold(metric: string, value: string){\n    return {\n      [`http_req_failed{name: ${metric}}`]: [`${value}`],\n    };\n  }\n  generateCustomThreshold(metric: string, value: string){\n    const values = value.split(',').map(val => val.trim());\n    return {\n      [metric]: values,\n    };\n  }\n  generateReqDurationThreshold(metric: string, value: string){\n    const values = value.split(',').map(val => val.trim());\n    return {\n      [`http_req_duration{name: \"${metric}\"}`]: values,\n    };\n  }\n}\n\n\n","export { countDocument } from '../../scenarios/mongoDBScenarios';\nimport { k6Executor } from '../../libs/executor';\n\nconst k6exec = new k6Executor();\n\n// Define the functions to be executed and the execution strategy\nconst funcExecution = ['countDocument'];\n\nconst executor = __ENV.EXECUTOR || 'per-vu-iterations';\n\n// Generate scenarios using the executor\nconst scenarios = k6exec.generateScenarios(funcExecution, executor);\nconst threshold = Object.assign(\n  {},\n  k6exec.generateCustomThreshold('http_req_duration{ scenario: countDocument }', 'avg<=23904'),\n  k6exec.generateCustomThreshold('http_req_failed{ scenario: countDocument }', 'rate<=0.03'),\n);\nexport const options = {\n  scenarios: scenarios,\n  thresholds: threshold,\n};\n"],"names":["xk6_mongo","MongoClient","mongoDBHost","mongoDBPort","arguments","length","undefined","mongoDBName","_classCallCheck","_defineProperty","client","_createClass","key","value","connect","connectionString","concat","newClient","disconnect","close","findAll","dbName","collectionName","results","error","console","findOne","filter","result","deleteOne","deleteMany","countDocuments","count","distinct","dropCollection","findOneAndUpdate","update","insertOne","doc","insertMany","docs","updateOne","updateMany","parseInt","__ENV","MONGODB_PORT","mongoDBUser","MONGODB_USER","mongoDBPassword","MONGODB_PASSWORD","findAllDocuments","log","findDocument","name","countDocument","k6Executor","VUs","Number","VUS","iterations","ITERATIONS","duration","DURATION","maxDuration","MAX_DURATION","rate","RATE","timeUnit","TIME_UNIT","startTime","START_TIME","generateScenarioPerVuIterations","executor","vus","tags","env","ENV","exec","generateScenarioConstantArrivalRate","preAllocatedVUs","generateScenarioConstantVUs","generateScenarios","funcExecution","scenarios","_iterator","_createForOfIteratorHelper","_step","s","n","done","func","Object","assign","err","e","f","generateReqFailedThreshold","metric","generateCustomThreshold","values","split","map","val","trim","generateReqDurationThreshold","k6exec","EXECUTOR","threshold","options","thresholds"],"sourceRoot":""}